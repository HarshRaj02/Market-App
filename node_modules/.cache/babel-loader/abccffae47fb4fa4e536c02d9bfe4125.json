{"ast":null,"code":"var _jsxFileName = \"/home/harshraj/Desktop/Market-App/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useContext, useRef, useState } from 'react';\nimport CartContext from '../../store/cart-context';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = item => item === '';\n\nconst isFiveChars = item => item.length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const nameIsValid = !isEmpty(enteredName);\n    const streetIsValid = !isEmpty(enteredStreet);\n    const postalIsValid = isFiveChars(enteredPostalCode);\n    const cityIsValid = !isEmpty(cityInputRef);\n    setFormValidity({\n      name: nameIsValid,\n      street: streetIsValid,\n      city: cityIsValid,\n      postal: postalIsValid\n    });\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && postalIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n      city: enteredCity\n    }); //after confirming order, make the cart empty and remove the modal\n    // var cartModal = document.getElementById('CartModal');\n    // console.log(cartModal);\n\n    props.onCancel();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !formValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), !formValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"PVLOXcG/P2f8+D68WLzEcdjR7r4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/harshraj/Desktop/Market-App/src/components/Cart/Checkout.js"],"names":["classes","useContext","useRef","useState","CartContext","useDispatch","useSelector","isEmpty","item","isFiveChars","length","Checkout","props","dispatch","formValidity","setFormValidity","name","street","postal","city","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","value","enteredStreet","enteredPostalCode","enteredCity","nameIsValid","streetIsValid","postalIsValid","cityIsValid","formIsValid","onConfirm","postalCode","onCancel","form","control","actions","submit"],"mappings":"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","sourcesContent":["import classes from './Checkout.module.css';\nimport { useContext, useRef, useState } from 'react';\nimport CartContext from '../../store/cart-context';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst isEmpty = (item) => item === '';\nconst isFiveChars = (item) => item.length === 5 ;\n\nconst Checkout = (props) => {\n\n  const dispatch = useDispatch();\n\n\n  const [formValidity,setFormValidity] = useState({\n    name:true,\n    street: true,\n    postal : true,\n    city:true\n  })\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n\n    const nameIsValid = !isEmpty(enteredName);\n    const streetIsValid = !isEmpty(enteredStreet);\n    const postalIsValid = isFiveChars(enteredPostalCode);\n    const cityIsValid = !isEmpty(cityInputRef);\n\n    setFormValidity({\n      name:nameIsValid,\n      street:streetIsValid,\n      city:cityIsValid,\n      postal:postalIsValid\n    });\n\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && postalIsValid;\n\n    if(!formIsValid)\n    {\n      return;\n    }\n    \n    props.onConfirm({\n      name:enteredName,\n      street:enteredStreet,\n      postalCode: enteredPostalCode,\n      city:enteredCity\n    })\n\n    //after confirming order, make the cart empty and remove the modal\n\n    \n    // var cartModal = document.getElementById('CartModal');\n    // console.log(cartModal);\n\n    props.onCancel();\n\n\n    \n  };\n\n\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n        {!formValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street'  ref={streetInputRef}/>\n        {!formValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef}/>\n        {!formValidity.postal && <p>Please enter a valid postal code (5 characters long)!</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef}/>\n        {!formValidity.city && <p>Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button  className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}