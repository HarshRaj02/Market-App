{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemToCart(state, action) {\n      console.log(action.payload);\n      const newItem = action.payload;\n      const existingItem = state.items.filter(item => item.id === newItem.id);\n      console.log(\"Existing Item\");\n      console.log(existingItem);\n      state.totalAmount = state.totalAmount + existingItem.price * existingItem.amount;\n\n      if (!existingItem) {\n        state.items.push(newItem);\n      } else {\n        existingItem.amount++;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      console.log(id);\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalAmount = state.totalAmount - existingItem.price;\n\n      if (existingItem.amount === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.amount--;\n      }\n    }\n\n  }\n});\nconst store = createStore(cartSlice.reducer);\nexport default store;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"sources":["/home/harshraj/Desktop/Market-App/src/redux-store/index.js"],"names":["createStore","createSlice","initialState","items","totalAmount","cartSlice","name","reducers","addItemToCart","state","action","console","log","payload","newItem","existingItem","filter","item","id","price","amount","push","removeItemFromCart","find","store","reducer","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAG,EAAV;AAAcC,EAAAA,WAAW,EAAG;AAA5B,CAArB;AAEA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,MADoB;AAE1BJ,EAAAA,YAF0B;AAG1BK,EAAAA,QAAQ,EAAG;AAEPC,IAAAA,aAAa,CAACC,KAAD,EAAOC,MAAP,EAAe;AAE5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AAEA,YAAMC,OAAO,GAAGJ,MAAM,CAACG,OAAvB;AAEA,YAAME,YAAY,GAAGN,KAAK,CAACN,KAAN,CAAYa,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAjD,CAArB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACAN,MAAAA,KAAK,CAACL,WAAN,GAAoBK,KAAK,CAACL,WAAN,GAAoBW,YAAY,CAACI,KAAb,GAAmBJ,YAAY,CAACK,MAAxE;;AAGA,UAAG,CAACL,YAAJ,EAAkB;AACdN,QAAAA,KAAK,CAACN,KAAN,CAAYkB,IAAZ,CAAiBP,OAAjB;AACH,OAFD,MAGC;AACIC,QAAAA,YAAY,CAACK,MAAb;AACH;AAED,KArBM;;AAwBPE,IAAAA,kBAAkB,CAACb,KAAD,EAAOC,MAAP,EAAe;AAE7B,YAAMQ,EAAE,GAAGR,MAAM,CAACG,OAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYM,EAAZ;AAEA,YAAMH,YAAY,GAAGN,KAAK,CAACN,KAAN,CAAYoB,IAAZ,CAAkBN,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;AACAT,MAAAA,KAAK,CAACL,WAAN,GAAoBK,KAAK,CAACL,WAAN,GAAoBW,YAAY,CAACI,KAArD;;AAEA,UAAGJ,YAAY,CAACK,MAAb,KAAwB,CAA3B,EAA8B;AAC1BX,QAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYa,MAAZ,CAAoBC,IAAD,IAASA,IAAI,CAACC,EAAL,KAAaA,EAAzC,CAAd;AACH,OAFD,MAIC;AACIH,QAAAA,YAAY,CAACK,MAAb;AACH;AAIL;;AA1CM;AAHe,CAAD,CAA7B;AAmDA,MAAMI,KAAK,GAAGxB,WAAW,CAACK,SAAS,CAACoB,OAAX,CAAzB;AACA,eAAeD,KAAf;AAEA,OAAO,MAAME,WAAW,GAAGrB,SAAS,CAACsB,OAA9B","sourcesContent":["import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = { items : [], totalAmount : 0};\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers : {\n\n        addItemToCart(state,action) {\n\n        console.log(action.payload);\n\n        const newItem = action.payload;\n\n        const existingItem = state.items.filter((item) => item.id === newItem.id);\n        console.log(\"Existing Item\");\n        console.log(existingItem);\n        state.totalAmount = state.totalAmount + existingItem.price*existingItem.amount;\n\n\n        if(!existingItem) {\n            state.items.push(newItem);\n        } else\n         {\n             existingItem.amount++;\n         }\n\n        },\n\n\n        removeItemFromCart(state,action) {\n\n            const id = action.payload;\n            console.log(id);\n\n            const existingItem = state.items.find((item) => item.id === id);\n            state.totalAmount = state.totalAmount - existingItem.price;\n\n            if(existingItem.amount === 1) {\n                state.items = state.items.filter((item)=> item.id !==  id);\n            }\n            else\n             {\n                 existingItem.amount--;\n             }\n             \n          \n\n        },\n    }\n});\n\n\n\nconst store = createStore(cartSlice.reducer);\nexport default store;\n\nexport const cartActions = cartSlice.actions;\n\n\n"]},"metadata":{},"sourceType":"module"}