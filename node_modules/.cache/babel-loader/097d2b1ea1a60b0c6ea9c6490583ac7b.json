{"ast":null,"code":"var _jsxFileName = \"/home/harshraj/Desktop/Market-App/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { cartActions } from '../../redux-store/index';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartItemsStore = useSelector(state => state.items);\n  const cartTotalAmountPrice = useSelector(state => state.totalAmount);\n  const isModalVisible = useSelector(state => state.isModalVisible);\n  const dispatch = useDispatch();\n  const [isCheckout, setCheckout] = useState(false);\n  const hasItems = cartItemsStore.length > 0;\n  const cartTotalAmount = `$${cartTotalAmountPrice.toFixed(2)}`;\n\n  const cartItemRemoveHandler = id => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const cartItemAddHandler = item => {\n    dispatch(cartActions.addItemToCartOnce(item));\n  };\n\n  const orderHandler = () => {\n    setCheckout(true);\n    dispatch(cartActions.toggleModalVisibility(true));\n  };\n\n  const onSubmitHandler = userData => {\n    fetch('https://market-app-43d47-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartItemsStore\n      })\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartItemsStore.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isModalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      id: \"CartModal\",\n      onClose: props.onClose,\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cartTotalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n        onConfirm: onSubmitHandler,\n        onCancel: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), !isCheckout && modalActions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"eLzApL30EhNIxQy1Tv0RNHoEgIY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/harshraj/Desktop/Market-App/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","cartActions","useDispatch","useSelector","Cart","props","cartItemsStore","state","items","cartTotalAmountPrice","totalAmount","isModalVisible","dispatch","isCheckout","setCheckout","hasItems","length","cartTotalAmount","toFixed","cartItemRemoveHandler","id","removeItemFromCart","cartItemAddHandler","item","addItemToCartOnce","orderHandler","toggleModalVisibility","onSubmitHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\n\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\n\nimport {cartActions} from '../../redux-store/index'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nconst Cart = (props) => {\n\n  const cartItemsStore =  useSelector(state => state.items);\n \n  const cartTotalAmountPrice = useSelector(state => state.totalAmount);\n\n  const isModalVisible = useSelector(state=> state.isModalVisible);\n\n  \n\n  const dispatch = useDispatch();\n  const [isCheckout, setCheckout] = useState(false);\n\n\n  const hasItems = cartItemsStore.length > 0;\n  const cartTotalAmount = `$${cartTotalAmountPrice.toFixed(2)}`\n\n  const cartItemRemoveHandler = (id) => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const cartItemAddHandler = (item) => {\n   dispatch(cartActions.addItemToCartOnce(item));\n  };\n\n  const orderHandler = () =>\n   {\n     setCheckout(true);\n     dispatch(cartActions.toggleModalVisibility(true));\n   }\n\n  const onSubmitHandler = (userData) => {\n\n    fetch('https://market-app-43d47-default-rtdb.firebaseio.com/orders.json',{\n      method:'POST',\n      body : JSON.stringify({\n        user:userData,\n        orderedItems : cartItemsStore\n      })\n    });\n\n\n  }\n  const cartItems = (\n    <ul className={classes['cart-items']}>\n      {cartItemsStore.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n        <button className={classes['button--alt']} onClick={props.onClose}>\n          Close\n        </button>\n        {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\n      </div>\n  );\n\n  return (\n    <div>\n   \n    {isModalVisible && <Modal id = \"CartModal\" onClose={props.onClose} > \n    {cartItems}\n    <div className={classes.total}>\n      <span>Total Amount</span>\n      \n      <span>{cartTotalAmount}</span>\n    </div>\n    {isCheckout  && <Checkout onConfirm = {onSubmitHandler} onCancel = {props.onClose}/>}\n    {!isCheckout && modalActions}\n    \n  </Modal>}\n  </div>\n   \n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}